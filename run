#This file is part of ECE461Project.

#ECE461Projectis free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.

#ECE461Project is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

#You should have received a copy of the GNU General Public License along with Foobar. If not, see https://www.gnu.org/licenses/. 

#!/bin/bash

# Check the number of arguments provided
if [ "$#" -lt 1 ]; then
    exit 1
fi

# Parse the command
COMMAND=$1

# Check if node and npm are installed, and if not, install them
if ! command -v node &> /dev/null || ! command -v npm &> /dev/null; then
    # Install Node.js using a package manager suitable for your system
    # Replace the installation command based on your system's package manager
    # For example, for Ubuntu, you can use:
    # sudo apt-get install -y nodejs

    # Check if curl is installed
    if ! command -v curl &> /dev/null; then
        exit 1
    fi

    # Install npm using the Node.js package manager (npm)
    curl -fsSL https://npmjs.com/install.sh | sh

    # Check if the installation was successful
    if ! command -v node &> /dev/null || ! command -v npm &> /dev/null; then
        exit 1
    fi
fi

# Continue with the rest of the script

# Check which command is being executed
case $COMMAND in
    "install")
        # Install TypeScript locally in your project directory
        npm install --save-dev typescript

        # Install project dependencies in user-land
        npm install --global-style

        # Check if the installation was successful
        if [ $? -ne 0 ]; then
            exit 1
        fi

        ;;

    "fetchGitHubInfo")
        # Compile TypeScript code
        tsc fetchGitHubInfo.ts

        # Assuming $2 contains the filename to be parsed
        node fetchGitHubInfo.js "$2"
        ;;

    "test")
        # Install necessary packages before running tests
        npm install --global-style axios simple-git nyc

        # Run jest for testing through nyc for coverage. Ensure that your TypeScript tests are either in a "__tests__" folder or end with ".test.ts".
        npx nyc --check-coverage --lines 80 jest

        # Check if the tests and coverage check were successful
        if [ $? -ne 0 ]; then
            exit 1
        fi

        # Note: The output format will depend on your jest and nyc configuration. Adjust as necessary.
        ;;

    *)
        # Check if the file exists
        if [ ! -f "$COMMAND" ]; then
            exit 1
        fi

        # Compile the TypeScript file and check for errors
        tsc main.ts
        if [ $? -ne 0 ]; then
            exit 1
        fi

        # Run the compiled JavaScript file
        node main.js "$COMMAND"
        ;;

esac

# If the previous command was unsuccessful, exit with an error
if [ $? -ne 0 ]; then
    exit 1
fi

exit 0
